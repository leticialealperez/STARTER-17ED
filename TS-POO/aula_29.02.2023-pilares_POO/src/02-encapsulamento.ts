/* ENCAPSULAMENTO 

    Conforme o proprio nome sugere, a proposta √© ISOLAR o m√°ximo poss√≠vel os atributos e m√©todos de uma classe
    de forma a esconder detalhes de funcionamento interno

    - Como aplicar? 
    Utilizando os modificadores de acesso. S√£o eles:

    1-  public    (+)  => vis√≠vel e modific√°vel de qualquer parte da nossa aplica√ß√£o (√© o padr√£o, aplicado quando n√£o definimos o modificador)
    2 - private   (-)  => v√≠sivel e acess√≠vel apenas dentro da pr√≥pria classe (recomendado ser a primeira op√ß√£o sempre)
    3 - protected (#)  => vis√≠vel e acess√≠vel apenas dentro da pr√≥pria classe ou de classes derivadas (aprofundaremos no pr√≥ximo pilar da POO)



    - Sendo PRIVADOS os atributos de uma classe, como fa√ßo para acessar os valores dos atributos na execu√ß√£o do software?
    Utilizando os m√©todos de acesso. Tem como √∫nica funcionalidade prover ACESSO/LEITURA aos atributo privados, os quais julgamos que DEVEM ser acessados por outras classes ou partes do nosso software.
    S√£o chamados de GETTERS.

    GETTER'S - caracteristicas
    1 - Retornam o tipo do atributo que ser√° provido o acesso;
    2 - N√£o recebe par√¢metro;
    3 - Seu nome √© composto pelo prefixo "get" seguido do nome do atributo a qual estar√° sendo provido o acesso;



    - Sendo PRIVADOS os atributos de uma classe, como fa√ßo para MODIFICAR os valores dos atributos na execu√ß√£o do software?
    Utilizando os m√©todos modificadores. Tem como √∫nica funcionalidade prover MODIFICA√á√ÉO aos atributos privados, os quais julgamos que PODEM ser modificados por outras classes ou partes do nosso software.
    S√£o chamados de SETTERS.

    SETTER'S - caracteristicas
    1 - N√£o possuem retorno;
    2 - Recebe por par√¢metro o valor a ser inputado no atributo;
    3 - Seu nome √© composto pelo prefixo "set" seguido do nome do atributo que iremos possibilitar a modifica√ß√£o;



    üí° O MOTIVO:
    Atrav√©s dos m√©todos acessores (GETTERS) podemos CONTROLAR como a informa√ß√£o ser√° retornada e atrav√©s dos m√©todos modificadores (SETTERS) podemos CONTROLAR que tipo de dado ser√° aceito para modifica√ß√£o e validar alguma outra poss√≠vel regra para efetivar essa modifica√ß√£o.

*/




