
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id String @id @db.Uuid @default(uuid())
  name String @db.VarChar(255)
  documentIdentification String @db.VarChar(11) @unique @map("document_identification")
  emailAddress String @db.VarChar(255) @unique @map("email_address")
  age Int? @db.SmallInt 
  password String @db.Text 
  authToken String? @db.Text @map("auth_token")
  deleted Boolean @db.Boolean @default(false)
  createdAt DateTime @db.Timestamp() @map("created_at") @default(now())
  updatedAt DateTime @db.Timestamp() @map("updated_at") @updatedAt
  deletedAt DateTime? @db.Timestamp() @map("deleted_at")

  address Address?

  @@map("students")
}

// Relação 1 - 1 (um aluno possui 1 endereço <=> 1 endereço pertence a 1 aluno)
model Address {
  id String @id @db.Uuid @default(uuid())
  street String @db.VarChar(255)
  addressNumber String @db.VarChar(255) @map("address_number")
  zipCode String @db.VarChar(8) @map("zip_code")
  complement String? @db.VarChar(255)
  neighborhood String @db.VarChar(255)
  city String @db.VarChar(255)
  uf String @db.VarChar(2)
  deleted Boolean @db.Boolean @default(false)
  createdAt DateTime @db.Timestamp() @map("created_at") @default(now())
  updatedAt DateTime @db.Timestamp() @map("updated_at") @updatedAt
  deletedAt DateTime? @db.Timestamp() @map("deleted_at")
  
  studentId String @db.Uuid @map("student_id") @unique
  student Student @relation(fields: [studentId], references: [id])

  @@map("addresses")
}
